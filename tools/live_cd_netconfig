#/bin/sh

INTS=`ifconfig -a|cut -c 1-8|sort | egrep -v "lo|bond"|uniq -u`
LOG="/root/network_setup.log"

PUB_VLAN="2001"
PUB_IP="75.55.108.12"
PUB_MASK="255.255.254.0"
PUB_GW="75.55.108.1"

MGMT_IP="192.168.112.75"
MGMT_MASK="255.255.255.0"
IPMI_CIDR="172.16.0.0/16"
MGMT_GW="192.168.112.1"

link() {
  ethtool $int | grep -i 'link detected'|grep 'yes' > /dev/null 2>&1
}

flush() {
  ip address flush $PUB_VNIC > /dev/null 2>&1
  vconfig rem $PUB_VNIC > /dev/null 2>&1
}

mlog() {
  echo $1| tee -a $LOG
}

manual() {
  cat<<-EOF>>/etc/network/interfaces

auto $int
iface $int inet manual
EOF
}

mgmt_flush() {
  ip address flush $int > /dev/null 2>&1
}


case $1 in
start)
echo "Starting network configuration..." > $LOG

PUB_INT="false"

# PUBLIC INTERFACE
modprobe bonding
for int in $INTS; do
  mlog "Testing $int link..."
  PTYPE=`ethtool $int|grep 'Supported port'|awk '{print $4}'`
  if [ $PTYPE != 'FIBRE' ]; then
    mlog " - $int not 10GbE"
    continue
  else
    mlog " + $int is 10GbE" 
  fi
  ifconfig $int up
  ethtool $int | grep -i 'link detected'|grep 'yes' > /dev/null 2>&1
  if [ $? != 0 ]; then
    mlog " - $int no link"
    manual
    continue
  fi
  mlog " + $int found link"

  mlog "Configuring public vlan $PUB_VLAN..."
  vconfig add $int $PUB_VLAN > /dev/null 2>&1
  PUB_VNIC="${int}.${PUB_VLAN}"
  if [ $? != 0 ]; then
    mlog " - Vlan config failure $int $PUB_VLAN"
    vconfig rem $PUB_VNIC
    manual
    continue
  fi
  mlog " + Vlan config successful $int $PUB_VLAN"
  ifconfig $PUB_VNIC up
  mlog "Assigning public ip..."
  ifconfig $PUB_VNIC $PUB_IP netmask $PUB_MASK > /dev/null 2>&1
  if [ $? != 0 ]; then
    mlog "  - failed"
    flush
    manual
    continue
  fi
  mlog "$PUB_VNIC ip assigned:"
  ifconfig $PUB_VNIC | grep 'inet addr'
  mlog "Testing ping $PUB_GW"
  ping -c 3 $PUB_GW > /dev/null 2>&1
  if [ $? != 0 ]; then
    mlog " - unable to reach $PUB_GW"
    flush
    manual
    continue
  else
    mlog " + Success - $PUB_VNIC IS PUBLIC INTERFACE"
    PUB_INT="$int"
    break
  fi
done

# TEST INTERNET CONNECTIVITY
PUBRESULT=""
if [ "$PUB_INT" = "false" ]; then
  PUBRESULT="!! FAILURE PUBLIC INTERFACE NOT FOUND !!"
  mlog "$PUBRESULT"
else
  mlog "$PUB_GW"
  ifconfig eth0
  mlog "Adding default route $PUB_GW"
  route add default gw $PUB_GW > /dev/null 2>&1
  mlog "Testing internet connectivity..."
  ping -c 3 8.8.8.8 > /dev/null 2>&1
  if [ $? != 0 ]; then
    mlog "  - Public interface unable to reach internet"
  else
    PUBRESULT="@@ SUCCESS - PUBLIC INTERNET REACHABLE @@"
    mlog "$PUBRESULT"
  fi
fi

# MANAGEMENT INTERFACE
MGMT_INT="false"
mlog "DISCOVERING MANAGEMENT INTERFACE"
for int in $INTS; do
  PTYPE=`ethtool $int|grep 'Supported port'|awk '{print $4}'`
  if [ "$PTYPE" != 'TP' ]; then
    mlog " - $int not Twisted Pair (TP)"
    continue
  else
    mlog " + $int is Twisted Pair (TP)"
  fi
  if [ $int = $PUB_INT ]; then
    continue
  fi
  mlog $int|egrep "\." > /dev/null 2>&1
  if [ $? = 0 ]; then
    continue
  fi
#  mlog "Testing $int link..." 
  ifconfig $int up
  sleep 5
  link
  if [ $? != 0 ]; then
    mlog " - $int no link"
#    continue
  fi
  mlog " + $int found link"

  mlog "Assigning management ip..."
  ifconfig $int $MGMT_IP netmask $MGMT_MASK > /dev/null 2>&1
  if [ $? != 0 ]; then
    mlog "  - failed"
    mgmt_flush
    manual
    continue
  fi
  mlog "$int ip assigned:"
  ifconfig $int | grep 'inet addr' | tee -a $LOG
#  mlog "Testing ping $MGMT_GW"
#  ping -c 3 $MGMT_GW > /dev/null 2>&1
#  if [ $? != 0 ]; then
#    mlog " - unable to reach $MGMT_GW"
#    mgmt_flush
#    continue
#  else
#    mlog " + Success - $int IS MANAGEMENT INTERFACE"
    MGMT_INT="$int"
cat<<-EOF>> /etc/network/interfaces

auto $int
iface $int inet static
  address $MGMT_IP
  netmask $MGMT_MASK
  gateway $MGMT_GW
EOF
    break
#  fi
done

if [ $MGMT_INT = 'false' ]; then
  mlog "!! FAILURE - MANAGEMENT INTERFACE NOT FOUND !!"
else
#  mlog "Adding management route $MGMT_GW"
#  route add -net $MGMT_CIDR gw $MGMT_GW > /dev/null 2>&1
#  if [ $? = 0 ]; then
    mlog "@@ SUCCESS - MANAGEMENT NETWORK CONFIGURED @@"
#  fi
fi
mlog "$PUBRESULT"
;;
*) echo "Usage: $0 start";;
esac
